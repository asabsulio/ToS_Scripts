#######asabsulio#######
#Charm subgraph#

declare lower;

#get current date
#def data = getYYYYMMDD();
#def year = Round(data/10000, 0);
#def month = Round((data % 10000) / 100, 0);
#def day = (data % 100);

def Tt = GetDaysToExpiration () / 365;
def S = close(GetUnderlyingSymbol());
def iv = imp_volatility(getunderlyingSymbol());
def r = GetInterestRate();
def q = if IsNaN(GetDividend()) then q[1] else GetDividend();
def K = GetStrike ();
def d1 = (Log(S / K)+(r-q+Sqr(iv)/2)*(Tt))/(iv*Sqrt(Tt));
#def Nd1 = Exp(-Sqr(d1)/2)*1/(2*double.Pi);
def Nd1 = Exp(-Sqr(d1)/2)*1/(Sqrt(2*double.Pi));
def d2 = d1-iv*Sqrt(Tt);

#Debugging
#addLabel(1,"Tt:"+Tt, color.white);
#addLabel(1,"CurrPrice:"+S, color.white);
#addLabel(1,"IV:"+iv, color.white);
#addLabel(1,"Strike:"+K, color.white);
#addLabel(1,"IntRate:"+r, color.white);
#addLabel(1,"Div:"+q, color.white);
#addLabel(1,"d1:"+d1, color.white);
#addLabel(1,"Nd1:"+Nd1, color.white);
#addLabel(1,"d2:"+d2, color.white);


plot charm = if isput() then Exp(-q * Tt) * (Nd1 * ((2*r*Tt - d2*IV*Sqrt(Tt)) / (2*Tt*IV*Sqrt(Tt))) - ((2*q*Tt + d1*IV*Sqrt(Tt)) / (2*Tt*IV*Sqrt(Tt))) * -d1 + q * -d1) 

else
 -Exp(-q * Tt) * (Nd1 * ((2*r*Tt - d2*IV*Sqrt(Tt)) / (2*Tt*IV*Sqrt(Tt))) + ((2*q*Tt - d1*IV*Sqrt(Tt)) / (2*Tt*IV*Sqrt(Tt))) * d1 + q * d1);

charm.assignvaluecolor(Color.white);
